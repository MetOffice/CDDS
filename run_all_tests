#!/usr/bin/env python3.8
# (C) British Crown Copyright 2017-2022, Met Office.
"""
Run all the tests in the CDDS packages.
"""
import datetime
import os
import subprocess
import sys

CDDS_DIR = os.path.dirname(os.path.realpath(__file__))
LOG_NAME = os.path.join(CDDS_DIR, 'cdds_test_failures.log')
ROOT_COMMAND = 'python setup.py nosetests'
TESTS_TO_RUN = {
    'cdds_common': ['--with-doctest'],
    'cdds_configure': ['--with-doctest', '-a slow'],
    'cdds_convert': ['--with-doctest', '-a integration'],
    'cdds_prepare': ['--with-doctest', '-a slow', '-a data_request'],
    'cdds_template': ['--with-doctest', '-a slow'],
    'cdds_transfer': ['--with-doctest -a !rabbitMQ', '-a slow'],  # rabbitMQ tests are only work on els055 or els056!
    'extract': ['--with-doctest', '-a slow'],
    'cdds_qc': ['--with-doctest -s'],
    'cdds_qc_plugin_cf17': ['--with-doctest'],
    'cdds_qc_plugin_cmip6': ['--with-doctest'],
    'hadsdk': ['--with-doctest', '-a integration', '-a slow', '-a data_request'],
    'mip_convert': ['--with-doctest', '-a integration', '-a mappings',
                    '-a slow'],
    'transfer': ['--with-doctest', '-a slow'],
    }


def main():
    """
    Run all the tests in the CDDS packages.
    """
    exit_code = 0
    for package, tests in TESTS_TO_RUN.items():
        os.chdir(os.path.join(CDDS_DIR, package))
        print('Executing tests for {}:'.format(package))
        for test in tests:
            command = '{} {}'.format(ROOT_COMMAND, test)
            print('--> {} {}'.format(command, (46 - len(command)) * '.'), end=''),
            sys.stdout.flush()
            process = subprocess.Popen(command.split(), stdout=subprocess.PIPE,
                                       stderr=subprocess.PIPE)
            stdoutdata, stderrdata = process.communicate()
            if process.returncode == 0:
                info = stderrdata.decode('utf-8').split('\n')
                msg = '[{}: {}]'.format(info[-2], info[-4])
                print('success! {}'.format(msg))
            else:
                exit_code = 1
                print('failed!\n!!! Please see "{}" for more details'.format(
                    LOG_NAME))
                current_date = datetime.datetime.now()
                msg = '{}: {}: {}\n\n'.format(current_date, package, command)
                with open(LOG_NAME, 'a') as file_handle:
                    file_handle.write(msg)
                    file_handle.write(stdoutdata.decode('utf-8'))
                    file_handle.write(stderrdata.decode('utf-8'))
                    file_handle.write('\n')
    return exit_code


if __name__ == '__main__':
    sys.exit(main())
