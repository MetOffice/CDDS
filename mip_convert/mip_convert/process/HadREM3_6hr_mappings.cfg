# (C) British Crown Copyright 2015-2021, Met Office.
# Please see LICENSE.rst for license details.
#
# This 'model to MIP mappings' configuration file contains sections
# for each 'MIP requested variable name' that has a common
# 'model to MIP mapping'. Please see the 'User Guide' for more
# information.


[DEFAULT]
mip_table_id = 6hr
positive = None
reviewer = N/A
status = embargoed

[clivi]
component = cftables cloud
dimension = longitude latitude time
expression = m01s02i392[lbproc=0]
units = kg m-2

[clwvi]
component = cftables cloud
dimension = longitude latitude time
expression = m01s02i391[lbproc=0] + m01s02i392[lbproc=0]
units = kg m-2

[hus200]
component = atmos-physics
dimension = longitude latitude plev200 time
expression = m01s30i205[blev=P200, lbproc=0] / m01s30i301[blev=P200, lbproc=0]
units = 1

[hus250]
component = atmos-physics
dimension = longitude latitude plev250 time
expression = m01s30i205[blev=P250, lbproc=0] / m01s30i301[blev=P250, lbproc=0]
units = 1

[hus300]
component = atmos-physics
dimension = longitude latitude plev300 time
expression = m01s30i205[blev=P300, lbproc=0] / m01s30i301[blev=P300, lbproc=0]
units = 1

[hus400]
component = atmos-physics
dimension = longitude latitude plev400 time
expression = m01s30i205[blev=P400, lbproc=0] / m01s30i301[blev=P400, lbproc=0]
units = 1

[hus500]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = m01s30i205[blev=P500, lbproc=0] / m01s30i301[blev=P500, lbproc=0]
units = 1

[hus600]
component = atmos-physics
dimension = longitude latitude plev600 time
expression = m01s30i205[blev=P600, lbproc=0] / m01s30i301[blev=P600, lbproc=0]
units = 1

[hus700]
component = atmos-physics
dimension = longitude latitude plev700 time
expression = m01s30i205[blev=P700, lbproc=0] / m01s30i301[blev=P700, lbproc=0]
units = 1

[hus750]
component = atmos-physics
dimension = longitude latitude plev750 time
expression = m01s30i205[blev=P750, lbproc=0] / m01s30i301[blev=P750, lbproc=0]
units = 1

[hus850]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = m01s30i205[blev=P850, lbproc=0] / m01s30i301[blev=P850, lbproc=0]
units = 1

[hus925]
component = atmos-physics
dimension = longitude latitude plev925 time
expression = m01s30i205[blev=P925, lbproc=0] / m01s30i301[blev=P925, lbproc=0]
units = 1

[mrfso]
component = snow-permafrost
dimension = longitude latitude time
expression = level_sum(m01s08i223[lbproc=0]
    * m01s08i230[lbproc=0]
    / (m01s08i230[lbproc=0] + m01s08i229[lbproc=0]))
units = kg m-2

[mrso]
component = land
dimension = longitude latitude time
expression = level_sum(m01s08i223[lbproc=0])
units = kg m-2

[mrsol]
component = land
dimension = longitude latitude sdepth time
expression = m01s08i223[lbproc=0]
units = kg m-2

[prw]
component = atmos-physics
dimension = longitude latitude time
expression = m01s30i461[lbproc=0]
units = kg m-2

[snc]
comment = A threshold is applied to determine whether a tile is covered
    in snow or not - if a tile has more than 0.1 kg/m2 of snow it is
    considered as covered with snow, if less then there is no snow. This
    means other snow diagnostics may indicate snow but this diagnostic is
    zero. We have not applied a threshold to the other snow diagnostics
    (unless explicitly noted) to preserve mass conservation.
component = snow-permafrost
dimension = longitude latitude time
expression = snc_calc(m01s08i236[lbproc=0], m01s03i317[lbproc=0], m01s03i395[lbproc=0])
units = %

[snd]
comment = This includes snow on the canopy of the needleleaf trees.
component = snow-permafrost
dimension = longitude latitude time
expression = land_class_mean(m01s08i376[lbproc=0], m01s03i317[lbproc=0], land_class='all')
units = m

[snw]
comment = This includes snow on the canopy of the needleleaf trees.
component = snow-permafrost
dimension = longitude latitude time
expression = m01s00i023[lbproc=0]
units = kg m-2

[ta200]
component = atmos-physics
dimension = longitude latitude plev200 time
expression = m01s30i204[blev=P200, lbproc=0]
    / m01s30i301[blev=P200, lbproc=0]
units = K

[ta250]
component = atmos-physics
dimension = longitude latitude plev250 time
expression = m01s30i204[blev=P250, lbproc=0]
    / m01s30i301[blev=P250, lbproc=0]
units = K

[ta300]
component = atmos-physics
dimension = longitude latitude plev300 time
expression = m01s30i204[blev=P300, lbproc=0]
    / m01s30i301[blev=P300, lbproc=0]
units = K

[ta400]
component = atmos-physics
dimension = longitude latitude plev400 time
expression = m01s30i204[blev=P400, lbproc=0]
    / m01s30i301[blev=P400, lbproc=0]
units = K

[ta500]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = m01s30i204[blev=P500, lbproc=0]
    / m01s30i301[blev=P500, lbproc=0]
units = K

[ta600]
component = atmos-physics
dimension = longitude latitude plev600 time
expression = m01s30i204[blev=P600, lbproc=0]
    / m01s30i301[blev=P600, lbproc=0]
units = K

[ta700]
component = atmos-physics
dimension = longitude latitude plev700 time
expression = m01s30i204[blev=P700, lbproc=0]
    / m01s30i301[blev=P700, lbproc=0]
units = K

[ta750]
component = atmos-physics
dimension = longitude latitude plev750 time
expression = m01s30i204[blev=P750, lbproc=0]
    / m01s30i301[blev=P750, lbproc=0]
units = K

[ta850]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = m01s30i204[blev=P850, lbproc=0]
    / m01s30i301[blev=P850, lbproc=0]
units = K

[ta925]
component = atmos-physics
dimension = longitude latitude plev925 time
expression = m01s30i204[blev=P925, lbproc=0]
    / m01s30i301[blev=P925, lbproc=0]
units = K

[ts]
comment = "skin" temperature (i.e., SST for open ocean).
component = atmos-physics boundary-layer
dimension = longitude latitude time
expression = m01s00i024[lbproc=0]
units = K

[ua200]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P200,lbproc=0]/m01s30i301[blev=P200,lbproc=0],m01s30i202[blev=P200,lbproc=0]
    /m01s30i301[blev=P200,lbproc=0])
units = m s-1

[ua250]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P250,lbproc=0]/m01s30i301[blev=P250,lbproc=0],m01s30i202[blev=P250,lbproc=0]
    /m01s30i301[blev=P250,lbproc=0])
units = m s-1

[ua300]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P300,lbproc=0]/m01s30i301[blev=P300,lbproc=0],m01s30i202[blev=P300,lbproc=0]
    /m01s30i301[blev=P300,lbproc=0])
units = m s-1

[ua400]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P400,lbproc=0]/m01s30i301[blev=P400,lbproc=0],m01s30i202[blev=P400,lbproc=0]
    /m01s30i301[blev=P400,lbproc=0])
units = m s-1

[ua500]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P500,lbproc=0]/m01s30i301[blev=P500,lbproc=0],m01s30i202[blev=P500,lbproc=0]
    /m01s30i301[blev=P500,lbproc=0])
units = m s-1

[ua600]
component = atmos-physics
dimension = longitude latitude time1 p700
expression = urot_calc(m01s30i201[blev=P600,lbproc=0]/m01s30i301[blev=P600,lbproc=0],m01s30i202[blev=P600,lbproc=0]
    /m01s30i301[blev=P600,lbproc=0])
units = m s-1

[ua700]
component = atmos-physics
dimension = longitude latitude time1 p700
expression = urot_calc(m01s30i201[blev=P700,lbproc=0]/m01s30i301[blev=P700,lbproc=0],m01s30i202[blev=P700,lbproc=0]
    /m01s30i301[blev=P700,lbproc=0])
units = m s-1

[ua750]
component = atmos-physics
dimension = longitude latitude time1 p750
expression = urot_calc(m01s30i201[blev=P750,lbproc=0]/m01s30i301[blev=P750,lbproc=0],m01s30i202[blev=P750,lbproc=0]
    /m01s30i301[blev=P750,lbproc=0])
units = m s-1

[ua850]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P850,lbproc=0]/m01s30i301[blev=P850,lbproc=0],m01s30i202[blev=P850,lbproc=0]
    /m01s30i301[blev=P850,lbproc=0])
units = m s-1

[uas]
component = boundary-layer
dimension = longitude latitude height10m time
# processor does not exist
expression = urot_calc_6h(m01s03i225[lbproc=0], m01s03i226[lbproc=0])
units = m s-1

[va200]
component = atmos-physics
dimension = longitude latitude plev200 time
expression = vrot_calc(m01s30i201[blev=P200,lbproc=0]/m01s30i301[blev=P200,lbproc=0],m01s30i202[blev=P200,lbproc=0]
    /m01s30i301[blev=P200,lbproc=0])
units = m s-1

[va250]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = vrot_calc(m01s30i201[blev=P250,lbproc=0]/m01s30i301[blev=P250,lbproc=0],m01s30i202[blev=P250,lbproc=0]
    /m01s30i301[blev=P250,lbproc=0])
units = m s-1

[va300]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = vrot_calc(m01s30i201[blev=P300,lbproc=0]/m01s30i301[blev=P300,lbproc=0],m01s30i202[blev=P300,lbproc=0]
    /m01s30i301[blev=P300,lbproc=0])
units = m s-1

[va400]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = vrot_calc(m01s30i201[blev=P400,lbproc=0]/m01s30i301[blev=P400,lbproc=0],m01s30i202[blev=P400,lbproc=0]
    /m01s30i301[blev=P400,lbproc=0])
units = m s-1

[va500]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = vrot_calc(m01s30i201[blev=P500,lbproc=0]/m01s30i301[blev=P500,lbproc=0],m01s30i202[blev=P500,lbproc=0]
    /m01s30i301[blev=P500,lbproc=0])
units = m s-1

[va600]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = vrot_calc(m01s30i201[blev=P600,lbproc=0]/m01s30i301[blev=P600,lbproc=0],m01s30i202[blev=P600,lbproc=0]
    /m01s30i301[blev=P600,lbproc=0])
units = m s-1

[va700]
component = atmos-physics
dimension = longitude latitude plev700 time
expression = vrot_calc(m01s30i201[blev=P700,lbproc=0]/m01s30i301[blev=P700,lbproc=0],m01s30i202[blev=P700,lbproc=0]
    /m01s30i301[blev=P700,lbproc=0])
units = m s-1

[va750]
component = atmos-physics
dimension = longitude latitude plev750 time
expression = vrot_calc(m01s30i201[blev=P750,lbproc=0]/m01s30i301[blev=P750,lbproc=0],m01s30i202[blev=P750,lbproc=0]
    /m01s30i301[blev=P750,lbproc=0])
units = m s-1

[va850]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = vrot_calc(m01s30i201[blev=P850,lbproc=0]/m01s30i301[blev=P850,lbproc=0],m01s30i202[blev=P850,lbproc=0]
    /m01s30i301[blev=P850,lbproc=0])
units = m s-1

[va925]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = vrot_calc(m01s30i201[blev=P925,lbproc=0]/m01s30i301[blev=P925,lbproc=0],m01s30i202[blev=P925,lbproc=0]
    /m01s30i301[blev=P925,lbproc=0])
units = m s-1

[vas]
component = boundary-layer
dimension = longitude latitude height10m time
#processor does not exist
expression = vrot_calc_6h(m01s03i225[lbproc=0],m01s03i226[lbproc=0])
units = m s-1

[zg10]
component = atmos-physics
dimension = longitude latitude plev10 time
expression = m01s30i207[blev=P10, lbproc=0] / m01s30i301[blev=P10, lbproc=0]
units = m

[zg20]
component = atmos-physics
dimension = longitude latitude plev20 time
expression = m01s30i207[blev=P20, lbproc=0] / m01s30i301[blev=P20, lbproc=0]
units = m

[zg30]
component = atmos-physics
dimension = longitude latitude plev30 time
expression = m01s30i207[blev=P30, lbproc=0] / m01s30i301[blev=P30, lbproc=0]
units = m

[zg50]
component = atmos-physics
dimension = longitude latitude plev50 time
expression = m01s30i207[blev=P50, lbproc=0] / m01s30i301[blev=P50, lbproc=0]
units = m

[zg70]
component = atmos-physics
dimension = longitude latitude plev70 time
expression = m01s30i207[blev=P70, lbproc=0] / m01s30i301[blev=P70, lbproc=0]
units = m

[zg100]
component = atmos-physics
dimension = longitude latitude plev100 time
expression = m01s30i207[blev=P100, lbproc=0] / m01s30i301[blev=P100, lbproc=0]
units = m

[zg150]
component = atmos-physics
dimension = longitude latitude plev150 time
expression = m01s30i207[blev=P150, lbproc=0] / m01s30i301[blev=P150, lbproc=0]
units = m

[zg200]
component = atmos-physics
dimension = longitude latitude plev200 time
expression = m01s30i207[blev=P200, lbproc=0] / m01s30i301[blev=P200, lbproc=0]
units = m

[zg250]
component = atmos-physics
dimension = longitude latitude plev250 time
expression = m01s30i207[blev=P250, lbproc=0] / m01s30i301[blev=P250, lbproc=0]
units = m

[zg300]
component = atmos-physics
dimension = longitude latitude plev300 time
expression = m01s30i207[blev=P300, lbproc=0] / m01s30i301[blev=P300, lbproc=0]
units = m

[zg400]
component = atmos-physics
dimension = longitude latitude plev400 time
expression = m01s30i207[blev=P400, lbproc=0] / m01s30i301[blev=P400, lbproc=0]
units = m

[zg500]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = m01s30i207[blev=P500, lbproc=0] / m01s30i301[blev=P500, lbproc=0]
units = m

[zg600]
component = atmos-physics
dimension = longitude latitude plev600 time
expression = m01s30i207[blev=P600, lbproc=0] / m01s30i301[blev=P600, lbproc=0]
units = m

[zg700]
component = atmos-physics
dimension = longitude latitude plev700 time
expression = m01s30i207[blev=P700, lbproc=0] / m01s30i301[blev=P700, lbproc=0]
units = m

[zg750]
component = atmos-physics
dimension = longitude latitude plev750 time
expression = m01s30i207[blev=P750, lbproc=0] / m01s30i301[blev=P750, lbproc=0]
units = m

[zg850]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = m01s30i207[blev=P850, lbproc=0] / m01s30i301[blev=P850, lbproc=0]
units = m

[zg925]
component = atmos-physics
dimension = longitude latitude plev925 time
expression = m01s30i207[blev=P925, lbproc=0] / m01s30i301[blev=P925, lbproc=0]
units = m

[zmla]
component = boundary-layer
dimension = longitude latitude time
expression = m01s00i025[lbproc=0]
units = m