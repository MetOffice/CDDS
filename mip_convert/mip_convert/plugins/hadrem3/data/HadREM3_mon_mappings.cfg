# (C) British Crown Copyright 2025, Met Office.
# Please see LICENSE.md for license details.
#
# This 'model to MIP mappings' configuration file contains sections
# for each 'MIP requested variable name' that has a common
# 'model to MIP mapping'. Please see the 'User Guide' for more
# information.

[DEFAULT]
mip_table_id = mon
positive = None
reviewer = N/A
status = embargoed

[COMMON]
radiation_comment = For instantaneous outputs, this diagnostic represents an
	average over the radiation time step using the state of the atmosphere
	(T,q,clouds) from the first dynamics step within that interval. The time
	coordinate is the start of the radiation time step interval, so the value
	for t(N) is the average from t(N) to t(N+1).

[hus200]
component = atmos-physics
dimension = longitude latitude plev200 time
expression = m01s30i205[blev=P200, lbproc=128]
	/ m01s30i301[blev=P200, lbproc=128]
units = 1

[hus250]
component = atmos-physics
dimension = longitude latitude plev250 time
expression = m01s30i205[blev=P250, lbproc=128]
	/ m01s30i301[blev=P250, lbproc=128]
units = 1

[hus300]
component = atmos-physics
dimension = longitude latitude plev300 time
expression = m01s30i205[blev=P300, lbproc=128]
	/ m01s30i301[blev=P300, lbproc=128]
units = 1

[hus400]
component = atmos-physics
dimension = longitude latitude plev400 time
expression = m01s30i205[blev=P400, lbproc=128]
	/ m01s30i301[blev=P400, lbproc=128]
units = 1

[hus500]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = m01s30i205[blev=P500, lbproc=128]
	/ m01s30i301[blev=P500, lbproc=128]
units = 1

[hus600]
component = atmos-physics
dimension = longitude latitude plev600 time
expression = m01s30i205[blev=P600, lbproc=128]
	/ m01s30i301[blev=P600, lbproc=128]
units = 1

[hus700]
component = atmos-physics
dimension = longitude latitude plev700 time
expression = m01s30i205[blev=P700, lbproc=128]
	/ m01s30i301[blev=P700, lbproc=128]
units = 1

[hus750]
component = atmos-physics
dimension = longitude latitude plev750 time
expression = m01s30i205[blev=P750, lbproc=128]
	/ m01s30i301[blev=P750, lbproc=128]
units = 1

[hus850]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = m01s30i205[blev=P850, lbproc=128]
	/ m01s30i301[blev=P850, lbproc=128]
units = 1

[hus925]
component = atmos-physics
dimension = longitude latitude plev925 time
expression = m01s30i205[blev=P925, lbproc=128]
	/ m01s30i301[blev=P925, lbproc=128]
units = 1

[huss]
component = boundary-layer
dimension = longitude latitude height2m time
expression = m01s03i237[lbproc=128]
units = 1

[rlus]
comment = For instantaneous outputs, this diagnostic represents an
	average over the radiation time step using the state of the atmosphere
	(T,q,clouds) from the first dynamics step within that interval. The time
	coordinate is the start of the radiation time step interval, so the value
	for t(N) is the average from t(N) to t(N+1).
component = radiation
dimension = longitude latitude time
expression = m01s02i207[lbproc=128] - m01s02i201[lbproc=128]
positive = up
units = W m-2

[sfcWind]
component = boundary-layer
dimension = longitude latitude height10m time
expression = m01s03i227[lbproc=128]
notes = An arbitrary choice between 'B-grid' or 'C-grid' but it would seem
	sensible to use the same throughout.
units = m s-1

[sfcWindmax]
component = boundary-layer
dimension = longitude latitude height10m time
expression = m01s03i227[lbproc=8320]
units = m s-1

[snc]
comment = A threshold is applied to determine whether a tile is covered
	in snow or not - if a tile has more than 0.1 kg/m2 of snow it is
	considered as covered with snow, if less then there is no snow. This
	means other snow diagnostics may indicate snow but this diagnostic is
	zero. We have not applied a threshold to the other snow diagnostics
	(unless explicitly noted) to preserve mass conservation.
component = snow-permafrost
dimension = longitude latitude time
expression = snc_calc(m01s08i236[lbproc=128], m01s03i317[lbproc=128], m01s00i030[lbproc=0, lbtim=0])
units = %

[snm]
component = snow-permafrost
dimension = longitude latitude time
expression = m01s08i231[lbproc=128]
units = kg m-2 s-1

[snw]
comment = This includes snow on the canopy of the needleleaf trees.
component = snow-permafrost
dimension = longitude latitude time
expression = m01s00i023[lbproc=128]
units = kg m-2

[ta200]
component = atmos-physics
dimension = longitude latitude plev200 time
expression = m01s30i204[blev=P200, lbproc=128]
	/ m01s30i301[blev=P200, lbproc=128]
units = K

[ta600]
component = atmos-physics
dimension = longitude latitude plev600 time
expression = m01s30i204[blev=P600, lbproc=128]
	/ m01s30i301[blev=P600, lbproc=128]
units = K

[ta700]
component = atmos-physics
dimension = longitude latitude plev700 time
expression = m01s30i204[blev=P700, lbproc=128]
	/ m01s30i301[blev=P700, lbproc=128]
units = K

[ta750]
component = atmos-physics
dimension = longitude latitude plev750 time
expression = m01s30i204[blev=P750, lbproc=128]
	/ m01s30i301[blev=P750, lbproc=128]
units = K

[ta850]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = m01s30i204[blev=P850, lbproc=128]
	/ m01s30i301[blev=P850, lbproc=128]
units = K

[ta925]
component = atmos-physics
dimension = longitude latitude plev925 time
expression = m01s30i204[blev=P925, lbproc=128]
	/ m01s30i301[blev=P925, lbproc=128]
units = K

[ta1000]
component = atmos-physics
dimension = longitude latitude plev1000 time
expression = m01s30i204[blev=P1000, lbproc=128]
	/ m01s30i301[blev=P1000, lbproc=128]
units = K

[tas]
component = atmos-physics
dimension = longitude latitude height2m time
expression = mon_mean_from_day(m01s03i236[lbproc=128])
units = K

[tasmax]
component = atmos-physics
dimension = longitude latitude height2m time
expression = m01s03i236[lbproc=8320]
units = K

[tasmin]
component = atmos-physics
dimension = longitude latitude height2m time
expression = m01s03i236[lbproc=4224]
units = K

[ua200]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P200,lbproc=128]/m01s30i301[blev=P200,lbproc=128],m01s30i202[blev=P200,lbproc=128]
	/m01s30i301[blev=P200,lbproc=128])
units = m s-1

[ua250]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P250,lbproc=128]/m01s30i301[blev=P250,lbproc=128],m01s30i202[blev=P250,lbproc=128]
	/m01s30i301[blev=P250,lbproc=128])
units = m s-1

[ua300]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P300,lbproc=128]/m01s30i301[blev=P300,lbproc=128],m01s30i202[blev=P300,lbproc=128]
	/m01s30i301[blev=P300,lbproc=128])
units = m s-1

[ua400]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P400,lbproc=128]/m01s30i301[blev=P400,lbproc=128],m01s30i202[blev=P400,lbproc=128]
	/m01s30i301[blev=P400,lbproc=128])
units = m s-1

[ua500]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P500,lbproc=128]/m01s30i301[blev=P500,lbproc=128],m01s30i202[blev=P500,lbproc=128]
	/m01s30i301[blev=P500,lbproc=128])
units = m s-1

[ua600]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P600,lbproc=128]/m01s30i301[blev=P600,lbproc=128],m01s30i202[blev=P600,lbproc=128]
	/m01s30i301[blev=P600,lbproc=128])
units = m s-1

[ua700]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P700,lbproc=128]/m01s30i301[blev=P700,lbproc=128],m01s30i202[blev=P700,lbproc=128]
	/m01s30i301[blev=P700,lbproc=128])
units = m s-1

[ua750]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P750,lbproc=128]/m01s30i301[blev=P750,lbproc=128],m01s30i202[blev=P750,lbproc=128]
	/m01s30i301[blev=P750,lbproc=128])
units = m s-1

[ua850]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P850,lbproc=128]/m01s30i301[blev=P850,lbproc=128],m01s30i202[blev=P850,lbproc=128]
	/m01s30i301[blev=P850,lbproc=128])
units = m s-1

[ua925]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = urot_calc(m01s30i201[blev=P925,lbproc=128]/m01s30i301[blev=P925,lbproc=128],m01s30i202[blev=P925,lbproc=128]
	/m01s30i301[blev=P925,lbproc=128])
units = m s-1

[uas]
component = boundary-layer
dimension = longitude latitude height10m time
expression = urot_calc(m01s03i225[lbproc=128], m01s03i226[lbproc=128])
units = m s-1

[va200]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = vrot_calc(m01s30i201[blev=P200,lbproc=128]/m01s30i301[blev=P200,lbproc=128],m01s30i202[blev=P200,lbproc=128]
    /m01s30i301[blev=P200,lbproc=128])
units = m s-1

[va500]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = vrot_calc(m01s30i201[blev=P500,lbproc=128]/m01s30i301[blev=P500,lbproc=128],m01s30i202[blev=P500,lbproc=128]
    /m01s30i301[blev=P500,lbproc=128])
units = m s-1

[va850]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = vrot_calc(m01s30i201[blev=P850,lbproc=128]/m01s30i301[blev=P850,lbproc=128],m01s30i202[blev=P850,lbproc=128]
    /m01s30i301[blev=P850,lbproc=128])
units = m s-1

[va925]
component = atmos-physics
dimension = longitude latitude plev19 time
expression = vrot_calc(m01s30i201[blev=P925,lbproc=128]/m01s30i301[blev=P925,lbproc=128],m01s30i202[blev=P925,lbproc=128]
    /m01s30i301[blev=P925,lbproc=128])
units = m s-1

[vas]
component = boundary-layer
dimension = longitude latitude height10m time
expression = vrot_calc(m01s03i225[lbproc=128], m01s03i226[lbproc=128])
units = m s-1

[zg10]
component = atmos-physics
dimension = longitude latitude plev10 time
expression = m01s30i207[blev=P10, lbproc=128]
	/ m01s30i301[blev=P10, lbproc=128]
units = m

[zg100]
component = atmos-physics
dimension = longitude latitude plev100 time
expression = m01s30i207[blev=P100, lbproc=128]
	/ m01s30i301[blev=P100, lbproc=128]
units = m

[zg150]
component = atmos-physics
dimension = longitude latitude plev150 time
expression = m01s30i207[blev=P150, lbproc=128]
	/ m01s30i301[blev=P150, lbproc=128]
units = m

[zg200]
component = atmos-physics
dimension = longitude latitude plev200 time
expression = m01s30i207[blev=P200, lbproc=128]
	/ m01s30i301[blev=P200, lbproc=128]
units = m

[zg250]
component = atmos-physics
dimension = longitude latitude plev250 time
expression = m01s30i207[blev=P250, lbproc=128]
	/ m01s30i301[blev=P250, lbproc=128]
units = m

[zg300]
component = atmos-physics
dimension = longitude latitude plev300 time
expression = m01s30i207[blev=P300, lbproc=128]
	/ m01s30i301[blev=P300, lbproc=128]
units = m

[zg400]
component = atmos-physics
dimension = longitude latitude plev400 time
expression = m01s30i207[blev=P400, lbproc=128]
	/ m01s30i301[blev=P400, lbproc=128]
units = m

[zg500]
component = atmos-physics
dimension = longitude latitude plev500 time
expression = m01s30i207[blev=P500, lbproc=128]
	/ m01s30i301[blev=P500, lbproc=128]
units = m

[zg600]
component = atmos-physics
dimension = longitude latitude plev600 time
expression = m01s30i207[blev=P600, lbproc=128]
	/ m01s30i301[blev=P600, lbproc=128]
units = m

[zg700]
component = atmos-physics
dimension = longitude latitude plev700 time
expression = m01s30i207[blev=P700, lbproc=128]
	/ m01s30i301[blev=P700, lbproc=128]
units = m

[zg750]
component = atmos-physics
dimension = longitude latitude plev750 time
expression = m01s30i207[blev=P750, lbproc=128]
	/ m01s30i301[blev=P750, lbproc=128]
units = m

[zg850]
component = atmos-physics
dimension = longitude latitude plev850 time
expression = m01s30i207[blev=P850, lbproc=128]
	/ m01s30i301[blev=P850, lbproc=128]
units = m

[zg925]
component = atmos-physics
dimension = longitude latitude plev925 time
expression = m01s30i207[blev=P925, lbproc=128]
	/ m01s30i301[blev=P925, lbproc=128]
units = m

[zmla]
component = boundary-layer
dimension = longitude latitude time
expression = m01s03i334[lbproc=128]
units = m

