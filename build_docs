#!/bin/bash

parse_options() {
    # Parse all arguments/options of the command
    for i in "$@"
    do
    case $i in
        --cddsdir=*)
        CDDS_SRC_DIR="${i#*=}"
        shift
        ;;
        --docdir=*)
        DOC_BUILD_DIR="${i#*=}"
        shift
        ;;
        -h|--help)
        HELP=YES
        shift
        ;;
        -c|--clean)
        CLEAN_UP=YES
        shift
        ;;
        *)
            # unknown option
        ;;
    esac
    done

    # Set defaults
    if [ -z "$CDDS_SRC_DIR" ]
    then
          CDDS_SRC_DIR=${1:-$PWD}
    fi

    if [ -z "$DOC_BUILD_DIR" ]
    then
          DOC_BUILD_DIR=${2:-"${PWD}/docs"}
    fi
}

show_help() {
    programname=$0
    echo "Usage: $programname [-ch] [--cddsdir=cddssrcdir] [--docdir=docdirpath]"
    echo "  --cddsdir       path to CDDS source directory if not present use the current directory"
    echo "  --docdir        path to the documentation directory if not present use 'docs' in the current directory"
    echo "  -c/--clean      clean and delete documentation folders"
    echo "  -h/--help       display help"
}

build_docs() {
    # Build all documentations for each component
    # The name of the doc directory is always the value in $DOC_BUILD_DIR
    CDDS_COMPONENTS="cdds_common cdds_configure cdds_convert cdds_qc cdds_qc_plugin_cf17 cdds_qc_plugin_cmip6 cdds_prepare cdds_transfer extract mip_convert transfer hadsdk"
    . ${CDDS_SRC_DIR}/setup_env_for_devel ${CDDS_SRC_DIR}
    for COMPONENT in $CDDS_COMPONENTS
    do
        mkdir -p ${DOC_BUILD_DIR}/$COMPONENT/
        cd ${CDDS_SRC_DIR}/$COMPONENT/
        python setup.py build_sphinx -Ea --build-dir=${DOC_BUILD_DIR}/$COMPONENT/
    done
}

clean_docs() {
    # Delete all generated doc directories
    rm -rf ${DOC_BUILD_DIR}
}

process_script() {
    # Trigger the right process according the given command options
    if [ -n "$HELP" ]
    then
        show_help
        exit 0
    fi

    echo "Use as cdds source directory         = ${CDDS_SRC_DIR}"
    echo "Use name for the build directories   = ${DOC_BUILD_DIR}"

    if [ -z "$CLEAN_UP" ]
    then
        echo "Build documentations..."
        build_docs
    else
        echo "Clean documentation directories..."
        clean_docs
    fi
}

parse_options "$@"
process_script
